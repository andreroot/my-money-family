
services:
  n8n-main:
    container_name: n8n-main
    # image: n8nio/n8n
    build:
      context: .
      dockerfile: Dockerfile   
    ports:
      - "5678:5678"
    environment:
      # - .env
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_BASIC_AUTH_USER=user
      - N8N_BASIC_AUTH_PASSWORD=password
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n
      - NODE_FUNCTION_ALLOW_EXTERNAL=axios,qs
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true    
      - N8N_CUSTOM_EXTENSIONS=/home/node/.n8n/custom      
      - N8N_QUEUE_MODE=redis
      - QUEUE_BULL_REDIS_HOST=redis
      - N8N_SECURE_COOKIE=false
    volumes:
      - /home/ec2-user/scripts:/home/node/scripts 
      - /home/ec2-user/n8n_data/_data:/home/node/.n8n


    networks:
      - docker-n8n-waha

    depends_on:
      - db
    restart: unless-stopped

  n8n-worker:
    image: n8nio/n8n:latest
    restart: always
    depends_on:
      - n8n-main
      - redis
      - db
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n
      - N8N_ENCRYPTION_KEY=chave-secreta-bem-grande
      - N8N_QUEUE_MODE=redis
      - QUEUE_BULL_REDIS_HOST=redis
      - EXECUTIONS_MODE=queue
    networks:
      - docker-n8n-waha
    deploy:
      replicas: 2   # n√∫mero de workers (pode aumentar para escalar)


  db:
    container_name: n8n-db
    # Use the official PostgreSQL image
    # image: postgres:17
    image: postgres:17   
    ports:
      - "5432:5432"     
    volumes:
      - /home/ec2-user/db-data:/var/lib/postgresql/data
    networks:
      - docker-n8n-waha      
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n
      - POSTGRES_DB=n8n
    restart: unless-stopped

  ngrok:
    image: ngrok/ngrok
    container_name: ngrok
    command: http --authtoken ${NGROK_AUTHTOKEN} n8n:5678
    ports:
      - "4040:4040"      
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    volumes:
      - /home/ec2-user/ngrok-config/.config/ngrok:/home/ngrok/.config/ngrok
    depends_on:
      - n8n-main
    networks:
      - docker-n8n-waha 


  redis:
    image: redis:latest
    container_name: redis_n8n
    environment:
      - REDIS_USERNAME=myadmin
      - REDIS_PASSWORD=12345
      - REDIS_DISABLE_DEFAULT_USER=true
    volumes:
      - /home/ec2-user/data/redis:/data        
    ports:
      - 6379:6379
    networks: 
      - docker-n8n-waha

  # python-runner:
  #   build: ./python-runner
  #   ports:
  #     - 5000:5000


  waha:
    restart: always
    # https://waha.devlike.pro/docs/how-to/engines/#docker-images
    # https://portal.devlike.pro/docker-image
    image: devlikeapro/waha
    container_name: waha_n8n
    # WAHA Core
    # image: devlikeapro/waha:latest
    networks:
      - docker-n8n-waha

    environment:
      - WHATSAPP_DEFAULT_ENGINE=NOWEB
      - WHATSAPP_HOOK_EVENTS=message,message.any
      - WHATSAPP_HOOK_URL=http://n8n-main:5678/webhook/c0edae36-810e-4653-a869-388867d03d56/waha
    # http://n8n:5678/webhook-test/c0edae36-810e-4653-a869-388867d03d56/waha
    # ports:
    #   - '127.0.0.1:3000:3000/tcp'
    ports:
         - "3000:3000"

    volumes:
      # Store sessions in the .sessions folder (comment it if you're using MongoDB)
      - /home/ec2-user/waha/.sessions:/app/.sessions

      # Save media files
      # https://waha.devlike.pro/docs/how-to/storages/#save-media-files-between-the-container-restarts
      - /home/ec2-user/waha/.media:/app/.media

volumes:
  db-data:
  n8n-projeto:
  n8n-node:
  waha-n8n:

networks:
  docker-n8n-waha:
    driver: bridge